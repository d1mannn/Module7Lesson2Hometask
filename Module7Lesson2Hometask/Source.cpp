#include <stdio.h>
#include <locale.h>
#include <time.h>
#include <iostream>
#include <stdlib.h>
#include "Header.h"
using namespace std;

void main()
{	
	setlocale(LC_ALL, "Rus");
	short int task;
	do
	{
		cout << "Введите номер задания - ";
		cin >> task;
		switch (task)
		{
			case 1:
			{
				/*1.	Пользователь вводит с клавиатуры целое шестизначное число.
				Написать программу, которая определяет, является ли введенное число – счастливым
				(Счастливым считается шестизначное число, у которого сумма первых 3 цифр равна сумме вторых трех цифр).
				Если пользователь ввел не шестизначное число – сообщение об ошибке.*/
				if (HappyNumb() == 1)
					cout << "Число СЧАСТЛИВОЕ" << endl;
				else
					cout << "Число НЕ счастливое" << endl;
			} break;

			case 2:
			{
				/*2.	Пользователь вводит четырехзначное число.Необходимо поменять в этом числе 1 и 2 цифры,
					а также 3 и 4 цифры.Если пользователь вводит не четырехзначное число – вывести сообщение об ошибке.*/
				int numb;
				do
				{
					cout << "Введите 4х значное число - ";
					cin >> numb;
				} while (numb < 1000 || numb > 8999);
				NumbChange(&numb);
			} break;

			case 3:
			{
				/*3.	Зарплата менеджера составляет 200$ + процент от продаж.
					продажи до 500$ - 3 % , от 500 до 1000 – 5 % , свыше 1000 – 8 % .
					Пользователь вводит с клавиатуры уровень продаж для трех менеджеров.
					Определить их зарплату, определить лучшего менеджера,
					начислить ему премию 200$, вывести итоги на экран.*/
				int SalesLevel1, SalesLevel2, SalesLevel3;
				cout << "Введите последовательно уровни продаж для 1-го, 2-го и 3-го менеджера - ";
				cin >> SalesLevel1 >> SalesLevel2 >> SalesLevel3;
				ManagersSalary(&SalesLevel1, &SalesLevel2, &SalesLevel3);

			} break;

			case 4:
			{
				/*4.	Вася работает программистом и получает 50$ за каждые 100 строк кода.За каждое третее опоздание Васю штрафуют на 20$.Реализовать меню :
					a.пользователь вводит желаемый доход Васи и количество опозданий, посчитать, сколько строк кода ему надо написать
					b.пользователь вводит количество строк кода, написанное Васей и желаемый объем зарплаты.Посчитать, сколько раз Вася может опоздать
					c.пользователь вводит количество строк кода и количество опозданий, определить, сколько денег заплатят Васе и заплатят ли вообще*/
				cout << "пользователь вводит желаемый доход Васи и количество опозданий\nпосчитать, сколько строк кода ему надо написать" << endl;
				int income, late;
				cout << "Введите желаемый доход Васи - ";
				cin >> income;
				cout << "Введите кол-во опозданий - ";
				cin >> late;
				VasyaCoder(&income, &late);

				int str;
				cout << "Введите кол-во строк - ";
				cin >> str;
				cout << "Введите желаемый доход Васи - ";
				cin >> income;
				VasyaCoder2(&income, &str);

				cout << "Введите кол-во строк - ";
				cin >> str;
				cout << "Введите кол-во опозданий - ";
				cin >> late;
				VasyaCoder3(&late, &str);
			} break;

			case 5:
			{
				/*5.	Подсчитать количество целых чисел в диапазоне от 100 до 999 у которых есть две одинаковые цифры*/
				CountOfNumbs();
			} break;

			case 6:
			{
				/*6.	Подсчитать количество целых чисел в диапазоне от 100 до 999 у которых все цифры разные*/
				CountOfNumbs();
			} break;

			case 7:
			{
				/*7.	Пользователь вводит любое целое число.Необходимо из этого целого числа удалить все цифры 3 и 6 и вывести обратно на экран.*/
				int numb;
				do
				{
					cout << "Введите 4х значное число - ";
					cin >> numb;
				} while (numb < 1000 || numb > 9999);
				NumbDelete(&numb);
			} break;

			case 8:
			{
				/*8.	Пользователь вводит целое число.Необходимо вывести все целые числа, на которое заданное число делиться без остатка.*/
				int numb;
				do
				{
					cout << "Введите пол-ное число > 0 ---- ";
					cin >> numb;
				} while (numb <= 0);
				BigArr(&numb);

			} break;

			case 9:
			{
				/*9.	Вывести на экран фигуры заполненные звездочками.Диалог с пользователем реализовать при помощи меню.*/
				int numb;
				do
				{
					cout << "Введите номер от 1 до 5";
					cin >> numb;
				} while (numb < 1 || numb > 5);
				CreativeArr(&numb);
			} break;
		}
	} while (task > 0);
	

	system("pause");
}